<?php
// $Id$
/**
 * @file
 * API of commonly needed services, like centralized authentication.
 *
 * @todo externalize strings, manage in drupal admin screens
 *
 */

require_once(dirname(__FILE__) . '/helpers/cuwebauth.php');
require_once(dirname(__FILE__) . '/helpers/voyager.php');
require_once(dirname(__FILE__) . '/helpers/ldap.php');
require_once(dirname(__FILE__) . '/helpers/json.php');

/**
 * Implements hook_permission.
 */
function cul_common_permission() {
  return array(
    'access cuwebauth checkbox' => array(
      'title' => t('Access CUWebAuth checkbox'),
      'description' => t('Can set CUWebAuth requirement for access to nodes'),
      ),
    'bypass cuwebauth' => array(
      'title' => t('Bypass CUWebAuth'),
      'description' => t('Can bypass CUWebAuth when required by a node'),
      ),
    );
}

/**
 * Implements hook_init().
 * this implements the patch for panels on http://drupal.org/node/362065
 */
function cul_common_init() {
  // Make sure CUWebAuth is triggered properly
  // when the node_view is overwritten by the Panels module
  if (module_exists('panels') && 'node' == arg(0) && is_numeric(arg(1))) {
    $node = node_load(arg(1));
    if (FALSE !== $node) {
      cul_common_nodeapi($node, 'view', NULL, TRUE);
    }
  }
  drupal_add_js('https://embanner.univcomm.cornell.edu/OWC-emergency-banner.js', array('type' => 'external'));
  //drupal_add_js('https://embanner.univcomm.cornell.edu/OWC-emergency-banner.js', 'external');
}

/**
 * Implements hook_help().
 */
function cul_common_help($path, $arg) {
  $txt = '';
  if ($path == 'admin/help#cul_common') {
    $txt = 'API of commonly needed services, like centralized authentication.';
  }
  return '<p>' . t($txt) . '</p>';
}

/**
 * Implements hook_menu().
 */
function cul_common_menu() {
  $items['cul_common.voyager'] = array(
    'title' => 'Voyager Patron Data',
    'page callback' => 'get_voyager_patron_json',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['cul_common.ldap'] = array(
    'title' => 'LDAP Patron Data',
    'page callback' => 'get_ldap_json',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['cul_common.logout'] = array(
    'title' => 'CUWebAuth Logout',
    'page callback' => 'cuwebauth_logout_from_url',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter.
 */
function cul_common_form_node_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['#node']) && can_set_auth()) {
    // Find the content type of the node we are editing.
    $content_type = $form['#node']->type;
    // webforms have node_form as a base form id
    if ($content_type != 'webform') {
      // Alter the other node forms here.
      $node = $form['#node'];
      $cuwebauth_set = get_cuwebauth($node);
      $form['cuwebauth'] = array(
        '#type' => 'checkbox',
        '#title' => 'Require CUWebLogin?',
        '#default_value' => $cuwebauth_set ? 1 : 0,
        '#weight' => -10,
      );
    }
  }
}

/**
 * Implements hook_node_insert().
 */
function cul_common_node_insert($node) {
  manage_cuwebuath($node);
}

/**
 * Implements hook_node_update().
 */
function cul_common_node_update($node) {
  manage_cuwebuath($node);
}

/**
 * Implements hook_node_delete().
 */
function cul_common_node_delete($node) {
  manage_cuwebuath($node);
}

/**
 * Implements hook_node_view().
 */
function cul_common_node_view($node, $view_mode = 'full') {
  if ((! can_bypass_auth()) && get_cuwebauth($node)) {
    cu_authenticate();
  }
}
/**
 * https://api.drupal.org/comment/498#comment-498
 * no more hook_nodeapi in Drupal 7
 */

/**
 * Implementation of hook_mail_alter().
 * I could not find the mail_id as being passed to me.
 */

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function cul_common_mail_alter(&$message) {
  if ($message['id'] == 'webform_submission') {
    $message['subject'] = $message['subject'] . ' from ' . $message['headers']['From'];
    $message['headers']['Reply-To'] = $message['headers']['From'];
  }
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function cul_common_cron() {
  get_and_set_cuwa_secret(TRUE);
}

